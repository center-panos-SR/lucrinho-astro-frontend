---
import Layout from '~/layouts/Layout.astro';
import { getCollection } from 'astro:content';

// Buscar todos os posts publicados
const allPosts = (await getCollection('post')).filter((post) => !post.data.draft);

// Preparar dados dos posts para o cliente (JavaScript)
const postsData = allPosts.map(post => ({
  slug: post.slug,
  title: post.data.title,
  description: post.data.description || '',
  category: post.data.category || '',
  tags: post.data.tags || [],
  image: post.data.image || '',
  publishDate: post.data.publishDate.toISOString(),
  body: post.body
}));

const metadata = {
  title: 'Pesquisa - Lucrinho',
  description: 'Pesquise artigos no Lucrinho',
};
---

<Layout {...metadata}>
  <section class="px-4 py-16 mx-auto max-w-6xl lg:px-8 lg:py-20">
    <!-- Cabeçalho da Pesquisa -->
    <header class="max-w-3xl mx-auto text-center mb-12">
      <h1 class="text-4xl md:text-5xl font-bold leading-tighter tracking-tighter mb-4" id="search-title">
        Pesquisar
      </h1>
      <p class="text-xl text-muted" id="search-subtitle">
        Digite sua pesquisa no campo abaixo
      </p>
    </header>

    <!-- Campo de busca na página -->
    <div class="max-w-2xl mx-auto mb-12">
      <form action="/pesquisa" method="get" class="relative">
        <div class="relative">
          <svg 
            class="absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400" 
            width="20" 
            height="20" 
            viewBox="0 0 20 20" 
            fill="none" 
            xmlns="http://www.w3.org/2000/svg"
          >
            <path d="M14.645 13.482L17.411 16.248L16.498 17.161L13.732 14.395C12.737 15.191 11.476 15.667 10.104 15.667C6.896 15.667 4.292 13.063 4.292 9.854C4.292 6.646 6.896 4.042 10.104 4.042C13.313 4.042 15.917 6.646 15.917 9.854C15.917 11.226 15.441 12.487 14.645 13.482ZM13.349 13.002C14.139 12.189 14.625 11.078 14.625 9.854C14.625 7.356 12.602 5.333 10.104 5.333C7.606 5.333 5.583 7.356 5.583 9.854C5.583 12.352 7.606 14.375 10.104 14.375C11.328 14.375 12.439 13.889 13.253 13.099L13.349 13.002Z" fill="currentColor"/>
          </svg>
          <input 
            type="search" 
            name="q"
            id="desktop-search-input-page"
            placeholder="Pesquisar artigos..." 
            class="w-full pl-12 pr-4 py-4 text-lg border-2 border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:border-blue-500 dark:bg-slate-800 dark:text-white transition-colors"
            autofocus
          />
        </div>
      </form>
    </div>

    <!-- Container de Resultados -->
    <div id="search-results"></div>
  </section>

  <!-- Dados dos posts para busca client-side -->
  <script define:vars={{ postsData }}>
    // Função para formatar data
    function formatDate(dateString) {
      const date = new Date(dateString);
      return date.toLocaleDateString('pt-BR', {
        year: 'numeric',
        month: 'long',
        day: 'numeric',
      });
    }

    // Função para realizar a busca
    function performSearch(query) {
      const normalizedQuery = query.toLowerCase().trim();
      
      if (!normalizedQuery) {
        return [];
      }

      return postsData.filter(post => {
        const titleMatch = post.title.toLowerCase().includes(normalizedQuery);
        const descriptionMatch = post.description.toLowerCase().includes(normalizedQuery);
        const contentMatch = post.body.toLowerCase().includes(normalizedQuery);
        const categoryMatch = post.category.toLowerCase().includes(normalizedQuery);
        const tagsMatch = post.tags.some(tag => tag.toLowerCase().includes(normalizedQuery));
        
        return titleMatch || descriptionMatch || contentMatch || categoryMatch || tagsMatch;
      });
    }

    // Função para renderizar os resultados
    function renderResults(results, query) {
      const container = document.getElementById('search-results');
      const title = document.getElementById('search-title');
      const subtitle = document.getElementById('search-subtitle');

      if (!query) {
        // Estado inicial
        title.textContent = 'Pesquisar';
        subtitle.textContent = 'Digite sua pesquisa no campo abaixo';
        container.innerHTML = `
          <div class="max-w-2xl mx-auto text-center py-12">
            <div class="mb-6">
              <svg class="mx-auto h-24 w-24 text-blue-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
              </svg>
            </div>
            <h2 class="text-2xl font-bold mb-4 dark:text-white">
              Pesquise nossos artigos
            </h2>
            <p class="text-lg text-muted mb-8">
              Digite no campo acima para encontrar artigos sobre qualquer tema
            </p>
            <a 
              href="/blog" 
              class="inline-block px-6 py-3 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 transition-colors"
            >
              Ver todos os artigos
            </a>
          </div>
        `;
        return;
      }

      // Atualizar cabeçalho
      title.textContent = 'Resultados da Pesquisa';
      subtitle.innerHTML = `${results.length} resultado${results.length !== 1 ? 's' : ''} encontrado${results.length !== 1 ? 's' : ''} para <strong>"${query}"</strong>`;

      if (results.length === 0) {
        // Nenhum resultado
        container.innerHTML = `
          <div class="max-w-2xl mx-auto text-center py-12">
            <div class="mb-6">
              <svg class="mx-auto h-24 w-24 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
            </div>
            <h2 class="text-2xl font-bold mb-4 dark:text-white">
              Nenhum resultado encontrado
            </h2>
            <p class="text-lg text-muted mb-8">
              Não encontramos nenhum artigo correspondente à sua pesquisa "<strong>${query}</strong>".
            </p>
            <div class="space-y-4">
              <p class="text-muted">Sugestões:</p>
              <ul class="text-left max-w-md mx-auto space-y-2 text-muted">
                <li>• Verifique a ortografia das palavras</li>
                <li>• Tente usar palavras-chave diferentes</li>
                <li>• Use termos mais genéricos</li>
                <li>• Reduza o número de palavras na busca</li>
              </ul>
            </div>
            <div class="mt-8">
              <a 
                href="/blog" 
                class="inline-block px-6 py-3 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 transition-colors"
              >
                Ver todos os artigos
              </a>
            </div>
          </div>
        `;
        return;
      }

      // Renderizar resultados
      const articlesHTML = results.map(post => `
        <article class="flex flex-col rounded-lg shadow-lg overflow-hidden bg-white dark:bg-slate-800 hover:shadow-xl transition-shadow">
          ${post.image ? `
            <a href="/blog/${post.slug}">
              <img
                src="${post.image}"
                alt="${post.title}"
                class="w-full h-48 object-cover"
                loading="lazy"
              />
            </a>
          ` : ''}
          <div class="flex flex-col flex-1 p-6">
            <div class="flex items-center gap-2 text-sm text-muted mb-2">
              <time datetime="${post.publishDate}">
                ${formatDate(post.publishDate)}
              </time>
              ${post.category ? `
                <span>·</span>
                <span class="text-blue-600 dark:text-blue-400">${post.category}</span>
              ` : ''}
            </div>
            <h2 class="text-xl font-bold mb-2 dark:text-white">
              <a
                href="/blog/${post.slug}"
                class="hover:text-blue-600 dark:hover:text-blue-400 transition-colors"
              >
                ${post.title}
              </a>
            </h2>
            ${post.description ? `
              <p class="text-muted dark:text-slate-400 mb-4 flex-1 line-clamp-3">
                ${post.description}
              </p>
            ` : ''}
            <div class="flex items-center justify-between">
              <a
                href="/blog/${post.slug}"
                class="text-blue-600 dark:text-blue-400 hover:underline font-medium"
              >
                Ler mais →
              </a>
            </div>
          </div>
        </article>
      `).join('');

      container.innerHTML = `<div class="grid gap-6 md:grid-cols-2 lg:grid-cols-3">${articlesHTML}</div>`;
    }

    // Pegar parâmetro da URL e fazer busca inicial
    function initializeSearch() {
      const urlParams = new URLSearchParams(window.location.search);
      const query = urlParams.get('q') || '';
      const searchInput = document.getElementById('desktop-search-input-page');
      
      if (searchInput) {
        searchInput.value = query;
      }

      if (query) {
        const results = performSearch(query);
        renderResults(results, query);
      } else {
        renderResults([], '');
      }
    }

    // Atualizar busca quando o input mudar
    const searchInput = document.getElementById('desktop-search-input-page');
    if (searchInput) {
      searchInput.addEventListener('input', (e) => {
        const query = e.target.value.trim();
        const results = performSearch(query);
        renderResults(results, query);
        
        // Atualizar URL sem recarregar a página
        const url = new URL(window.location);
        if (query) {
          url.searchParams.set('q', query);
        } else {
          url.searchParams.delete('q');
        }
        window.history.replaceState({}, '', url);
      });
    }

    // Inicializar quando a página carregar
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', initializeSearch);
    } else {
      initializeSearch();
    }
  </script>
</Layout>

<style>
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>

